plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

//ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

sourceSets {
	main {
		resources {
			srcDirs "src/main/resources", "src/main/resources/profiles"
		}
	}
}

tasks{
	processResources{
		duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}

group = 'pcrc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.testng:testng:7.1.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// jwt 사용
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// JSONParser, JSONObject 설정
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// batch + scheduler
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	// google oauth
	implementation 'org.springframework.security:spring-security-oauth2-core:6.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// fcm
	implementation 'com.google.firebase:firebase-admin:6.8.1'
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

	implementation 'commons-io:commons-io:2.4'
}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}